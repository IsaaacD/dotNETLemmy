name: Build, test, and deploy nuget package on new tag

on:
  push:
    branches: 
      - main
  release:
    types:
      - published    # Run the workflow when a new GitHub release is published
    
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget
    
jobs:
  create_package:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        
      - name: Build
        run: dotnet build --configuration Release
        
      - name: Pack
        run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }} --no-build
      
      - uses: actions/upload-artifact@v3
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg
          
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        
      - run: ls
        
      - name: Setup config.json username
        uses: jossef/action-set-json-field@v2.1
        with:
          file: dotNETLemmy.Docs/config.json
          field: username
          value: ${{ secrets.LEMMY_USERNAME }}
          
      - name: Setup config.json username
        uses: jossef/action-set-json-field@v2.1
        with:
          file: dotNETLemmy.Tests/config.json
          field: password
          value: ${{ secrets.LEMMY_PASSWORD }}
          
      - name: Test
        run: dotnet test --configuration Release --no-build
        
        
  validate_package:
    runs-on: ubuntu-latest
    needs: [ create_package, test ]
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
    
      - uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Install nuget validator
        run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global
        
      - name: Validate package
        run: meziantou.validate-nuget-package (Get-ChildItem "${{ env.NuGetDirectory }}/*.nupkg")
        
  deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ validate_package ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v3

      - name: Publish NuGet package
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }
          
